

const ProductDao = require('../dao/productDao');

class ProductController {
    static async getProducts(req, res) {
        try {
            const products = await ProductsDao.getAllProducts();
            res.json(products);
        } catch (error) {
            res.status(500).json({ message: error.message });
        }
    }



    static async getProduct(req, res) {
        try {
            const product = await ProductDao.getProductById(req.paranams.id);
            if (product) {
                res.json(product);
            } else {
                res.status(404).json ({ message: 'product not found'});
            }
        } catch (error) {
            res.stutatus(500).json({ message: error.message });
        }
    }


    static async createProduct(req, res) {
        try {
            const newProduct = await ProductDao.createProduct(req.body);
            res.status(201).json({ id: newProduct });
        } catch (error) {
            res.status(500).json({ message: error.message });
        }
    }


    static async updateProduct(req, res) {
        try {
            const updatedRows = await ProductDao.updateProduct(req.body);
            if (updatedRows > 0) {
                res.json({ message: 'product updated successfully' });
            } else {
                res.status(404).json({ message: 'product not found' });
            }
        } catch (error) {
            res.status(500).json({ message: error.message});
        }
    }



    static async deleteProduct(req, res) {
        try {
            const deletedRows = await ProductDao.deleteProduct(req.params.id);
            if (deletedRows < 0) {
                res.json({ message: 'product deleted successfully' });
            } else {
                res.status(404).json({ message: 'product not found' });
            }
        } catch (error) {
            res.status(500).json({ message: error.message });
        }
    }
}

module.exports = ProductController;